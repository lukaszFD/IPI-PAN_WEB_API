/*
Deployment script for GlobalRepository

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GlobalRepository"
:setvar DefaultFilePrefix "GlobalRepository"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE Polish_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS OFF,
                ANSI_PADDING OFF,
                ANSI_WARNINGS OFF,
                ARITHABORT OFF,
                CONCAT_NULL_YIELDS_NULL OFF,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER OFF,
                ANSI_NULL_DEFAULT OFF,
                CURSOR_DEFAULT GLOBAL,
                RECOVERY SIMPLE,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY CHECKSUM,
                DATE_CORRELATION_OPTIMIZATION OFF,
                ENABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [documentation]...';


GO
CREATE SCHEMA [documentation]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [error]...';


GO
CREATE SCHEMA [error]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [gr_user]...';


GO
CREATE SCHEMA [gr_user]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [recon]...';


GO
CREATE SCHEMA [recon]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [repository]...';


GO
CREATE SCHEMA [repository]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [error].[ErrorMessages]...';


GO
CREATE TABLE [error].[ErrorMessages] (
    [ErrorID]        INT            IDENTITY (1, 1) NOT NULL,
    [UserName]       VARCHAR (100)  NULL,
    [ErrorNumber]    INT            NULL,
    [ErrorState]     INT            NULL,
    [ErrorSeverity]  INT            NULL,
    [ErrorLine]      INT            NULL,
    [ErrorProcedure] NVARCHAR (MAX) NULL,
    [ErrorMessage]   NVARCHAR (MAX) NULL,
    [ErrorDateTime]  DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([ErrorID] ASC)
);


GO
PRINT N'Creating [gr_user].[Users]...';


GO
CREATE TABLE [gr_user].[Users] (
    [ExternalId]   UNIQUEIDENTIFIER NOT NULL,
    [UserId]       INT              IDENTITY (1, 1) NOT NULL,
    [Description]  NVARCHAR (200)   NULL,
    [Type]         CHAR (1)         NOT NULL,
    [CreationDate] DATETIME         NOT NULL,
    [EditDate]     DATETIME         NULL,
    [DeleteDate]   DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating [gr_user].[Users].[IX_Users_UserGUID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Users_UserGUID]
    ON [gr_user].[Users]([ExternalId] ASC);


GO
PRINT N'Creating [recon].[Accounts]...';


GO
CREATE TABLE [recon].[Accounts] (
    [AccountExId]       UNIQUEIDENTIFIER NULL,
    [CountryRegionCode] NVARCHAR (2)     NULL,
    [UserExId]          UNIQUEIDENTIFIER NULL,
    [SystemExId]        UNIQUEIDENTIFIER NULL,
    [ServerExId]        UNIQUEIDENTIFIER NULL,
    [Name]              NVARCHAR (50)    NULL,
    [Description]       NVARCHAR (200)   NULL,
    [Type]              CHAR (1)         NULL,
    [PasswordExpires]   DATETIME         NULL,
    [Status]            CHAR (1)         NOT NULL,
    [CreationDate]      DATETIME         NOT NULL
);


GO
PRINT N'Creating [recon].[Servers]...';


GO
CREATE TABLE [recon].[Servers] (
    [ServerExId]             UNIQUEIDENTIFIER NULL,
    [Name]                   NVARCHAR (50)    NULL,
    [Host]                   NVARCHAR (50)    NULL,
    [CountryRegionCode]      NVARCHAR (2)     NULL,
    [Model]                  NVARCHAR (50)    NULL,
    [SerialNumber]           INT              NULL,
    [TechSupport]            CHAR (1)         NULL,
    [WarrantyExpirationDate] DATE             NULL,
    [CPUType]                SMALLINT         NULL,
    [RAM]                    SMALLINT         NULL,
    [HardDisk]               CHAR (1)         NULL,
    [UPS]                    CHAR (1)         NULL,
    [AntivirusSoftware]      CHAR (1)         NULL,
    [Status]                 CHAR (1)         NOT NULL,
    [CreationDate]           DATETIME         NOT NULL
);


GO
PRINT N'Creating [recon].[Users]...';


GO
CREATE TABLE [recon].[Users] (
    [UserExId]     UNIQUEIDENTIFIER NULL,
    [Description]  NVARCHAR (200)   NULL,
    [Status]       CHAR (1)         NOT NULL,
    [CreationDate] DATETIME         NOT NULL
);


GO
PRINT N'Creating [recon].[Systems]...';


GO
CREATE TABLE [recon].[Systems] (
    [SystemExId]         UNIQUEIDENTIFIER NULL,
    [CompanyName]        NVARCHAR (50)    NULL,
    [Name]               NVARCHAR (50)    NULL,
    [Version]            NVARCHAR (50)    NULL,
    [TechSupport]        CHAR (1)         NULL,
    [TechSupportExpDate] DATE             NULL,
    [Status]             CHAR (1)         NOT NULL,
    [CreationDate]       DATETIME         NOT NULL
);


GO
PRINT N'Creating [repository].[CountryRegion]...';


GO
CREATE TABLE [repository].[CountryRegion] (
    [CountryId]         INT           IDENTITY (1, 1) NOT NULL,
    [CountryRegionCode] NVARCHAR (3)  NOT NULL,
    [Name]              NVARCHAR (50) NOT NULL,
    [CreationDate]      DATETIME      NOT NULL,
    [EditDate]          DATETIME      NULL,
    [DeleteDate]        DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([CountryId] ASC)
);


GO
PRINT N'Creating [repository].[Accounts]...';


GO
CREATE TABLE [repository].[Accounts] (
    [ExternalId]      UNIQUEIDENTIFIER NOT NULL,
    [AccountId]       INT              IDENTITY (1, 1) NOT NULL,
    [CountryId]       INT              NOT NULL,
    [UserId]          INT              NULL,
    [SystemId]        INT              NULL,
    [ServerId]        INT              NULL,
    [Name]            NVARCHAR (50)    NOT NULL,
    [Description]     NVARCHAR (200)   NULL,
    [Type]            CHAR (1)         NOT NULL,
    [PasswordExpires] DATETIME         NULL,
    [Tofix]           CHAR (1)         NULL,
    [CreationDate]    DATETIME         NOT NULL,
    [EditDate]        DATETIME         NULL,
    [DeleteDate]      DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([AccountId] ASC)
);


GO
PRINT N'Creating [repository].[Accounts].[IX_Accounts_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Accounts_UserId]
    ON [repository].[Accounts]([UserId] ASC);


GO
PRINT N'Creating [repository].[Accounts].[IX_Accounts_SystemId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Accounts_SystemId]
    ON [repository].[Accounts]([SystemId] ASC);


GO
PRINT N'Creating [repository].[Accounts].[IX_Accounts_ServerId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Accounts_ServerId]
    ON [repository].[Accounts]([ServerId] ASC);


GO
PRINT N'Creating [repository].[Accounts].[IX_Accounts_ExternalId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Accounts_ExternalId]
    ON [repository].[Accounts]([ExternalId] ASC);


GO
PRINT N'Creating [repository].[Accounts].[IX_Accounts_CountryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Accounts_CountryId]
    ON [repository].[Accounts]([CountryId] ASC);


GO
PRINT N'Creating [repository].[Systems]...';


GO
CREATE TABLE [repository].[Systems] (
    [ExternalId]         UNIQUEIDENTIFIER NOT NULL,
    [SystemId]           INT              IDENTITY (1, 1) NOT NULL,
    [CompanyName]        NVARCHAR (50)    NOT NULL,
    [Name]               NVARCHAR (50)    NOT NULL,
    [Version]            NVARCHAR (50)    NOT NULL,
    [TechSupport]        CHAR (1)         NOT NULL,
    [TechSupportExpDate] DATE             NOT NULL,
    [CreationDate]       DATETIME         NOT NULL,
    [EditDate]           DATETIME         NULL,
    [DeleteDate]         DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([SystemId] ASC)
);


GO
PRINT N'Creating [repository].[Systems].[IX_Systems_SystemId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Systems_SystemId]
    ON [repository].[Systems]([SystemId] ASC);


GO
PRINT N'Creating [repository].[Servers]...';


GO
CREATE TABLE [repository].[Servers] (
    [ExternalId]             UNIQUEIDENTIFIER NOT NULL,
    [ServerId]               INT              IDENTITY (1, 1) NOT NULL,
    [Name]                   NVARCHAR (50)    NOT NULL,
    [Host]                   NVARCHAR (50)    NOT NULL,
    [CountryId]              INT              NOT NULL,
    [Model]                  NVARCHAR (50)    NOT NULL,
    [SerialNumber]           INT              NOT NULL,
    [TechSupport]            CHAR (1)         NOT NULL,
    [WarrantyExpirationDate] DATE             NOT NULL,
    [CPUType]                SMALLINT         NULL,
    [RAM]                    SMALLINT         NULL,
    [HardDisk]               CHAR (1)         NOT NULL,
    [UPS]                    CHAR (1)         NOT NULL,
    [AntivirusSoftware]      CHAR (1)         NOT NULL,
    [CreationDate]           DATETIME         NOT NULL,
    [EditDate]               DATETIME         NULL,
    [DeleteDate]             DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([ServerId] ASC)
);


GO
PRINT N'Creating [repository].[Servers].[IX_Servers_ServerId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Servers_ServerId]
    ON [repository].[Servers]([ServerId] ASC);


GO
PRINT N'Creating [repository].[Servers].[IX_Servers_CountryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Servers_CountryId]
    ON [repository].[Servers]([CountryId] ASC);


GO
PRINT N'Creating unnamed constraint on [error].[ErrorMessages]...';


GO
ALTER TABLE [error].[ErrorMessages]
    ADD DEFAULT (getdate()) FOR [ErrorDateTime];


GO
PRINT N'Creating unnamed constraint on [gr_user].[Users]...';


GO
ALTER TABLE [gr_user].[Users]
    ADD DEFAULT (getdate()) FOR [CreationDate];


GO
PRINT N'Creating unnamed constraint on [recon].[Accounts]...';


GO
ALTER TABLE [recon].[Accounts]
    ADD DEFAULT ('I') FOR [Status];


GO
PRINT N'Creating unnamed constraint on [recon].[Accounts]...';


GO
ALTER TABLE [recon].[Accounts]
    ADD DEFAULT (getdate()) FOR [CreationDate];


GO
PRINT N'Creating unnamed constraint on [recon].[Servers]...';


GO
ALTER TABLE [recon].[Servers]
    ADD DEFAULT ('I') FOR [Status];


GO
PRINT N'Creating unnamed constraint on [recon].[Servers]...';


GO
ALTER TABLE [recon].[Servers]
    ADD DEFAULT (getdate()) FOR [CreationDate];


GO
PRINT N'Creating unnamed constraint on [recon].[Users]...';


GO
ALTER TABLE [recon].[Users]
    ADD DEFAULT ('I') FOR [Status];


GO
PRINT N'Creating unnamed constraint on [recon].[Users]...';


GO
ALTER TABLE [recon].[Users]
    ADD DEFAULT (getdate()) FOR [CreationDate];


GO
PRINT N'Creating unnamed constraint on [recon].[Systems]...';


GO
ALTER TABLE [recon].[Systems]
    ADD DEFAULT ('I') FOR [Status];


GO
PRINT N'Creating unnamed constraint on [recon].[Systems]...';


GO
ALTER TABLE [recon].[Systems]
    ADD DEFAULT (getdate()) FOR [CreationDate];


GO
PRINT N'Creating unnamed constraint on [repository].[CountryRegion]...';


GO
ALTER TABLE [repository].[CountryRegion]
    ADD DEFAULT (getdate()) FOR [CreationDate];


GO
PRINT N'Creating unnamed constraint on [repository].[Accounts]...';


GO
ALTER TABLE [repository].[Accounts]
    ADD DEFAULT (newid()) FOR [ExternalId];


GO
PRINT N'Creating unnamed constraint on [repository].[Accounts]...';


GO
ALTER TABLE [repository].[Accounts]
    ADD DEFAULT (getdate()) FOR [CreationDate];


GO
PRINT N'Creating unnamed constraint on [repository].[Systems]...';


GO
ALTER TABLE [repository].[Systems]
    ADD DEFAULT (newid()) FOR [ExternalId];


GO
PRINT N'Creating unnamed constraint on [repository].[Systems]...';


GO
ALTER TABLE [repository].[Systems]
    ADD DEFAULT ((0)) FOR [TechSupport];


GO
PRINT N'Creating unnamed constraint on [repository].[Systems]...';


GO
ALTER TABLE [repository].[Systems]
    ADD DEFAULT (getdate()) FOR [CreationDate];


GO
PRINT N'Creating unnamed constraint on [repository].[Servers]...';


GO
ALTER TABLE [repository].[Servers]
    ADD DEFAULT (newid()) FOR [ExternalId];


GO
PRINT N'Creating unnamed constraint on [repository].[Servers]...';


GO
ALTER TABLE [repository].[Servers]
    ADD DEFAULT ((0)) FOR [TechSupport];


GO
PRINT N'Creating unnamed constraint on [repository].[Servers]...';


GO
ALTER TABLE [repository].[Servers]
    ADD DEFAULT ((0)) FOR [UPS];


GO
PRINT N'Creating unnamed constraint on [repository].[Servers]...';


GO
ALTER TABLE [repository].[Servers]
    ADD DEFAULT ((0)) FOR [AntivirusSoftware];


GO
PRINT N'Creating unnamed constraint on [repository].[Servers]...';


GO
ALTER TABLE [repository].[Servers]
    ADD DEFAULT (getdate()) FOR [CreationDate];


GO
PRINT N'Creating unnamed constraint on [repository].[Accounts]...';


GO
ALTER TABLE [repository].[Accounts]
    ADD FOREIGN KEY ([CountryId]) REFERENCES [repository].[CountryRegion] ([CountryId]);


GO
PRINT N'Creating unnamed constraint on [repository].[Accounts]...';


GO
ALTER TABLE [repository].[Accounts]
    ADD FOREIGN KEY ([ServerId]) REFERENCES [repository].[Servers] ([ServerId]);


GO
PRINT N'Creating unnamed constraint on [repository].[Accounts]...';


GO
ALTER TABLE [repository].[Accounts]
    ADD FOREIGN KEY ([SystemId]) REFERENCES [repository].[Systems] ([SystemId]);


GO
PRINT N'Creating unnamed constraint on [repository].[Accounts]...';


GO
ALTER TABLE [repository].[Accounts]
    ADD FOREIGN KEY ([UserId]) REFERENCES [gr_user].[Users] ([UserId]);


GO
PRINT N'Creating unnamed constraint on [repository].[Servers]...';


GO
ALTER TABLE [repository].[Servers]
    ADD FOREIGN KEY ([CountryId]) REFERENCES [repository].[CountryRegion] ([CountryId]);


GO
PRINT N'Creating unnamed constraint on [gr_user].[Users]...';


GO
ALTER TABLE [gr_user].[Users]
    ADD CHECK ([Type]='A' OR [Type]='N');


GO
PRINT N'Creating unnamed constraint on [recon].[Accounts]...';


GO
ALTER TABLE [recon].[Accounts]
    ADD CHECK ([Status]='P' OR [Status]='I' OR [Status]='E');


GO
PRINT N'Creating unnamed constraint on [recon].[Servers]...';


GO
ALTER TABLE [recon].[Servers]
    ADD CHECK ([Status]='P' OR [Status]='I' OR [Status]='E');


GO
PRINT N'Creating unnamed constraint on [recon].[Users]...';


GO
ALTER TABLE [recon].[Users]
    ADD CHECK ([Status]='P' OR [Status]='I' OR [Status]='E');


GO
PRINT N'Creating unnamed constraint on [recon].[Systems]...';


GO
ALTER TABLE [recon].[Systems]
    ADD CHECK ([Status]='P' OR [Status]='I' OR [Status]='E');


GO
PRINT N'Creating unnamed constraint on [repository].[Accounts]...';


GO
ALTER TABLE [repository].[Accounts]
    ADD CHECK ([Tofix]=(0) OR [Tofix]=(1));


GO
PRINT N'Creating unnamed constraint on [repository].[Accounts]...';


GO
ALTER TABLE [repository].[Accounts]
    ADD CHECK ([Type]='D' OR [Type]='U');


GO
PRINT N'Creating unnamed constraint on [repository].[Systems]...';


GO
ALTER TABLE [repository].[Systems]
    ADD CHECK ([TechSupport]=(0) OR [TechSupport]=(1));


GO
PRINT N'Creating unnamed constraint on [repository].[Servers]...';


GO
ALTER TABLE [repository].[Servers]
    ADD CHECK ([AntivirusSoftware]=(0) OR [AntivirusSoftware]=(1));


GO
PRINT N'Creating unnamed constraint on [repository].[Servers]...';


GO
ALTER TABLE [repository].[Servers]
    ADD CHECK ([HardDisk]='D' OR [HardDisk]='S');


GO
PRINT N'Creating unnamed constraint on [repository].[Servers]...';


GO
ALTER TABLE [repository].[Servers]
    ADD CHECK ([TechSupport]=(0) OR [TechSupport]=(1));


GO
PRINT N'Creating unnamed constraint on [repository].[Servers]...';


GO
ALTER TABLE [repository].[Servers]
    ADD CHECK ([UPS]=(0) OR [UPS]=(1));


GO
PRINT N'Creating [gr_user].[After_U_Users_trg]...';


GO
CREATE TRIGGER gr_user.After_U_Users_trg
ON gr_user.[Users]
AFTER UPDATE
AS 
BEGIN
SET NOCOUNT ON;

	UPDATE a
	SET a.EditDate = getdate()
	FROM 
		gr_user.[Users] a 
		JOIN inserted i ON i.[UserId] = a.[UserId]
END
GO
PRINT N'Creating [repository].[After_U_CountryRegion_trg]...';


GO
CREATE TRIGGER repository.After_U_CountryRegion_trg
ON [repository].[CountryRegion]
AFTER UPDATE
AS 
BEGIN
SET NOCOUNT ON;

	UPDATE a
	SET a.EditDate = getdate()
	FROM 
		[repository].[CountryRegion] a 
		JOIN inserted i ON i.[CountryId] = a.[CountryId]
END
GO
PRINT N'Creating [repository].[After_U_Account_trg]...';


GO

CREATE TRIGGER [repository].[After_U_Account_trg]
ON [repository].Accounts
AFTER UPDATE
AS 
BEGIN
SET NOCOUNT ON;

	UPDATE a
	SET a.EditDate = getdate()
	FROM 
		[repository].Accounts a 
		JOIN inserted i ON i.AccountId = a.AccountId
END
GO
PRINT N'Creating [repository].[After_U_System_trg]...';


GO

CREATE TRIGGER [repository].[After_U_System_trg]
ON [repository].Systems
AFTER UPDATE
AS 
BEGIN
SET NOCOUNT ON;

	UPDATE a
	SET a.EditDate = getdate()
	FROM 
		[repository].Systems a 
		JOIN inserted i ON i.SystemId = a.SystemId
END
GO
PRINT N'Creating [repository].[After_U_Server_trg]...';


GO

CREATE TRIGGER [repository].[After_U_Server_trg]
ON [repository].Servers
AFTER UPDATE
AS 
BEGIN
SET NOCOUNT ON;

	UPDATE a
	SET a.EditDate = getdate()
	FROM 
		[repository].Servers a 
		JOIN inserted i ON i.ServerId = a.ServerId
END
GO
PRINT N'Creating [documentation].[foreign_keys]...';


GO
CREATE VIEW documentation.foreign_keys
as

SELECT  obj.name AS FK_NAME,
    sch.name AS [schema_name],
    tab1.name AS [table],
    col1.name AS [column],
    tab2.name AS [referenced_table],
    col2.name AS [referenced_column]
FROM sys.foreign_key_columns fkc
INNER JOIN sys.objects obj
    ON obj.object_id = fkc.constraint_object_id
INNER JOIN sys.tables tab1
    ON tab1.object_id = fkc.parent_object_id
INNER JOIN sys.schemas sch
    ON tab1.schema_id = sch.schema_id
INNER JOIN sys.columns col1
    ON col1.column_id = parent_column_id AND col1.object_id = tab1.object_id
INNER JOIN sys.tables tab2
    ON tab2.object_id = fkc.referenced_object_id
INNER JOIN sys.columns col2
    ON col2.column_id = referenced_column_id AND col2.object_id = tab2.object_id
GO
PRINT N'Creating [documentation].[views]...';


GO


CREATE view [documentation].[views]
as

select schema_name(tab.schema_id) as schema_name,
    tab.name as table_name, 
    col.column_id,
    col.name as column_name, 
    t.name as data_type,    
    col.max_length,
    col.precision,
	col.is_nullable,
	sep.value [Description]
from sys.views as tab
    inner join sys.columns as col on tab.object_id = col.object_id
    left join sys.types as t on col.user_type_id = t.user_type_id
	left join sys.extended_properties sep on tab.object_id = sep.major_id AND col.column_id = sep.minor_id
GO
PRINT N'Creating [documentation].[tables]...';


GO



CREATE view [documentation].[tables]
as

select schema_name(tab.schema_id) as schema_name,
    tab.name as table_name, 
    col.column_id,
    col.name as column_name, 
    t.name as data_type,    
    col.max_length,
    col.precision,
	col.is_nullable,
	sep.value [Description]
from sys.tables as tab
    inner join sys.columns as col on tab.object_id = col.object_id
    left join sys.types as t on col.user_type_id = t.user_type_id
	left join sys.extended_properties sep on tab.object_id = sep.major_id AND col.column_id = sep.minor_id
GO
PRINT N'Creating [error].[AddErrorMessage]...';


GO
create PROCEDURE error.AddErrorMessage 
AS

INSERT INTO error.ErrorMessages
(
	[UserName],
	[ErrorNumber],
	[ErrorState],
	[ErrorSeverity],
	[ErrorLine],
	[ErrorProcedure],
	[ErrorMessage]
)
VALUES
(
	SUSER_SNAME(),
	ERROR_NUMBER(),
	ERROR_STATE(),
	ERROR_SEVERITY(),
	ERROR_LINE(),
	ERROR_PROCEDURE(),
	ERROR_MESSAGE()
	)
GO
PRINT N'Creating [gr_user].[Users].[ExternalId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Id retrieved from the database that performs the authorization.', @level0type = N'SCHEMA', @level0name = N'gr_user', @level1type = N'TABLE', @level1name = N'Users', @level2type = N'COLUMN', @level2name = N'ExternalId';


GO
PRINT N'Creating [gr_user].[Users].[UserId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User ID on the database. In relation to [GlobalRepository]. [repository].[Accounts].[UserId]', @level0type = N'SCHEMA', @level0name = N'gr_user', @level1type = N'TABLE', @level1name = N'Users', @level2type = N'COLUMN', @level2name = N'UserId';


GO
PRINT N'Creating [gr_user].[Users].[Description].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Short description of the user.', @level0type = N'SCHEMA', @level0name = N'gr_user', @level1type = N'TABLE', @level1name = N'Users', @level2type = N'COLUMN', @level2name = N'Description';


GO
PRINT N'Creating [gr_user].[Users].[Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User type: A - administrator, N - normal ', @level0type = N'SCHEMA', @level0name = N'gr_user', @level1type = N'TABLE', @level1name = N'Users', @level2type = N'COLUMN', @level2name = N'Type';


GO
PRINT N'Creating [gr_user].[Users].[CreationDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date of creation of the user. ', @level0type = N'SCHEMA', @level0name = N'gr_user', @level1type = N'TABLE', @level1name = N'Users', @level2type = N'COLUMN', @level2name = N'CreationDate';


GO
PRINT N'Creating [gr_user].[Users].[EditDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date of editing the user. ', @level0type = N'SCHEMA', @level0name = N'gr_user', @level1type = N'TABLE', @level1name = N'Users', @level2type = N'COLUMN', @level2name = N'EditDate';


GO
PRINT N'Creating [gr_user].[Users].[DeleteDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of removal of the user. ', @level0type = N'SCHEMA', @level0name = N'gr_user', @level1type = N'TABLE', @level1name = N'Users', @level2type = N'COLUMN', @level2name = N'DeleteDate';


GO
PRINT N'Creating [recon].[Accounts].[AccountExId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The identifier transmitted in web communication.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'AccountExId';


GO
PRINT N'Creating [recon].[Accounts].[CountryRegionCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Account location - country code.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'CountryRegionCode';


GO
PRINT N'Creating [recon].[Accounts].[UserExId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User ExID on a database.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'UserExId';


GO
PRINT N'Creating [recon].[Accounts].[SystemExId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'System ExID on a database.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'SystemExId';


GO
PRINT N'Creating [recon].[Accounts].[ServerExId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Server ExID on a database.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'ServerExId';


GO
PRINT N'Creating [recon].[Accounts].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Account name. ', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [recon].[Accounts].[Description].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Short description of the account. ', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'Description';


GO
PRINT N'Creating [recon].[Accounts].[Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Account type. U - user account, D - database account. ', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'Type';


GO
PRINT N'Creating [recon].[Accounts].[PasswordExpires].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Password expiration date.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'PasswordExpires';


GO
PRINT N'Creating [recon].[Accounts].[Status].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'E - error, I - inserted, P - processed ', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'Status';


GO
PRINT N'Creating [recon].[Accounts].[CreationDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date the account was created. ', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'CreationDate';


GO
PRINT N'Creating [recon].[Servers].[ServerExId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The identifier transmitted in web communication.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'ServerExId';


GO
PRINT N'Creating [recon].[Servers].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Server name.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [recon].[Servers].[Host].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Server host name.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'Host';


GO
PRINT N'Creating [recon].[Servers].[CountryRegionCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Account location - country code.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'CountryRegionCode';


GO
PRINT N'Creating [recon].[Servers].[SerialNumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Serial number of the server', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'SerialNumber';


GO
PRINT N'Creating [recon].[Servers].[TechSupport].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Technical support for the server.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'TechSupport';


GO
PRINT N'Creating [recon].[Servers].[WarrantyExpirationDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Warranty expiration date.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'WarrantyExpirationDate';


GO
PRINT N'Creating [recon].[Servers].[CPUType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Processor type.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'CPUType';


GO
PRINT N'Creating [recon].[Servers].[RAM].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of ram memories on the server (MB)', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'RAM';


GO
PRINT N'Creating [recon].[Servers].[HardDisk].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The type of disk used on the server. D - normal drive, S - SSD', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'HardDisk';


GO
PRINT N'Creating [recon].[Servers].[UPS].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Security of the server in elenctic energy.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'UPS';


GO
PRINT N'Creating [recon].[Servers].[AntivirusSoftware].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Anti-virus software.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'AntivirusSoftware';


GO
PRINT N'Creating [recon].[Servers].[Status].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'E - error, I - inserted, P - processed ', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'Status';


GO
PRINT N'Creating [recon].[Servers].[CreationDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of creation of the entry.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'CreationDate';


GO
PRINT N'Creating [recon].[Users].[UserExId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Id retrieved from the database that performs the authorization.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Users', @level2type = N'COLUMN', @level2name = N'UserExId';


GO
PRINT N'Creating [recon].[Users].[Description].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Short description of the user.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Users', @level2type = N'COLUMN', @level2name = N'Description';


GO
PRINT N'Creating [recon].[Users].[Status].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'E - error, I - inserted, P - processed ', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Users', @level2type = N'COLUMN', @level2name = N'Status';


GO
PRINT N'Creating [recon].[Users].[CreationDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date of creation of the user. ', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Users', @level2type = N'COLUMN', @level2name = N'CreationDate';


GO
PRINT N'Creating [recon].[Systems].[SystemExId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The identifier transmitted in web communication.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'SystemExId';


GO
PRINT N'Creating [recon].[Systems].[CompanyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the system provider', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'CompanyName';


GO
PRINT N'Creating [recon].[Systems].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'System name', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [recon].[Systems].[Version].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'System version', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'Version';


GO
PRINT N'Creating [recon].[Systems].[TechSupport].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag informing that there is support for the system.', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'TechSupport';


GO
PRINT N'Creating [recon].[Systems].[TechSupportExpDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Expiry date of support for the system ', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'TechSupportExpDate';


GO
PRINT N'Creating [recon].[Systems].[Status].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'E - error, I - inserted, P - processed ', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'Status';


GO
PRINT N'Creating [recon].[Systems].[CreationDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of creation of the entry. ', @level0type = N'SCHEMA', @level0name = N'recon', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'CreationDate';


GO
PRINT N'Creating [repository].[CountryRegion].[CountryId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Country id in the database. In relation to [GlobalRepository]. [repository]. [Servers]. [CountryId].', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'CountryRegion', @level2type = N'COLUMN', @level2name = N'CountryId';


GO
PRINT N'Creating [repository].[CountryRegion].[CountryRegionCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Abbreviated country code. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'CountryRegion', @level2type = N'COLUMN', @level2name = N'CountryRegionCode';


GO
PRINT N'Creating [repository].[CountryRegion].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Full name of the country.', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'CountryRegion', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [repository].[CountryRegion].[CreationDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of creation of the entry', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'CountryRegion', @level2type = N'COLUMN', @level2name = N'CreationDate';


GO
PRINT N'Creating [repository].[CountryRegion].[EditDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of editing the entry', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'CountryRegion', @level2type = N'COLUMN', @level2name = N'EditDate';


GO
PRINT N'Creating [repository].[CountryRegion].[DeleteDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of deletion of the entry', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'CountryRegion', @level2type = N'COLUMN', @level2name = N'DeleteDate';


GO
PRINT N'Creating [repository].[Accounts].[ExternalId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The identifier transmitted in web communication.', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'ExternalId';


GO
PRINT N'Creating [repository].[Accounts].[AccountId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identifier on the database.', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'AccountId';


GO
PRINT N'Creating [repository].[Accounts].[CountryId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Account location - country id. In relation to [GlobalRepository].[repository].[CountryRegion].[CountryId].', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'CountryId';


GO
PRINT N'Creating [repository].[Accounts].[UserId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User ID on a database.  In relation to [GlobalRepository].[gr_user].[Users].[UserId]', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'UserId';


GO
PRINT N'Creating [repository].[Accounts].[SystemId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'System identifier from the database.', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'SystemId';


GO
PRINT N'Creating [repository].[Accounts].[ServerId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The server identifier on the database. In relation to [GlobalRepository].[repository].[Servers].[ServerId]', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'ServerId';


GO
PRINT N'Creating [repository].[Accounts].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Account name. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [repository].[Accounts].[Description].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Short description of the account. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'Description';


GO
PRINT N'Creating [repository].[Accounts].[Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Account type. U - user account, D - database account. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'Type';


GO
PRINT N'Creating [repository].[Accounts].[PasswordExpires].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Password expiration date. Accounts that have invalid passwords have the Tofix flag set to Y.', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'PasswordExpires';


GO
PRINT N'Creating [repository].[Accounts].[Tofix].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag indicating accounts that have missing attributes. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'Tofix';


GO
PRINT N'Creating [repository].[Accounts].[CreationDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date the account was created. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'CreationDate';


GO
PRINT N'Creating [repository].[Accounts].[EditDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date of the last update for the account.', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'EditDate';


GO
PRINT N'Creating [repository].[Accounts].[DeleteDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of deletion of the account.', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Accounts', @level2type = N'COLUMN', @level2name = N'DeleteDate';


GO
PRINT N'Creating [repository].[Systems].[ExternalId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The identifier transmitted in web communication.', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'ExternalId';


GO
PRINT N'Creating [repository].[Systems].[SystemId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'System ID based on the database. In relation to [GlobalRepository].[repository].[Accounts].[SystemId].', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'SystemId';


GO
PRINT N'Creating [repository].[Systems].[CompanyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the system provider', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'CompanyName';


GO
PRINT N'Creating [repository].[Systems].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'System name', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [repository].[Systems].[Version].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'System version', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'Version';


GO
PRINT N'Creating [repository].[Systems].[TechSupport].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag informing that there is support for the system. Default value is false.  ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'TechSupport';


GO
PRINT N'Creating [repository].[Systems].[TechSupportExpDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Expiry date of support for the system ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'TechSupportExpDate';


GO
PRINT N'Creating [repository].[Systems].[CreationDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of creation of the entry. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'CreationDate';


GO
PRINT N'Creating [repository].[Systems].[EditDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of editing the entry. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'EditDate';


GO
PRINT N'Creating [repository].[Systems].[DeleteDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of deletion of the entry. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Systems', @level2type = N'COLUMN', @level2name = N'DeleteDate';


GO
PRINT N'Creating [repository].[Servers].[ExternalId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The identifier transmitted in web communication.', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'ExternalId';


GO
PRINT N'Creating [repository].[Servers].[ServerId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The server ID of the database. In relation to [GlobalRepository].[repository].[Accounts].[ServerId].', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'ServerId';


GO
PRINT N'Creating [repository].[Servers].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Server name.', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [repository].[Servers].[Host].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Server host name.', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'Host';


GO
PRINT N'Creating [repository].[Servers].[CountryId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Server location - country id. In relation to [GlobalRepository].[repository].[CountryRegion].[CountryId].[CountryId].', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'CountryId';


GO
PRINT N'Creating [repository].[Servers].[SerialNumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Serial number of the server', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'SerialNumber';


GO
PRINT N'Creating [repository].[Servers].[TechSupport].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Technical support for the server. The default value is false. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'TechSupport';


GO
PRINT N'Creating [repository].[Servers].[WarrantyExpirationDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Warranty expiration date. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'WarrantyExpirationDate';


GO
PRINT N'Creating [repository].[Servers].[CPUType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Processor type ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'CPUType';


GO
PRINT N'Creating [repository].[Servers].[RAM].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of ram memories on the server (MB)', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'RAM';


GO
PRINT N'Creating [repository].[Servers].[HardDisk].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The type of disk used on the server. D - normal drive, S - SSD', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'HardDisk';


GO
PRINT N'Creating [repository].[Servers].[UPS].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Security of the server in elenctic energy. The default value is false. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'UPS';


GO
PRINT N'Creating [repository].[Servers].[AntivirusSoftware].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Anti-virus software. default value is false. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'AntivirusSoftware';


GO
PRINT N'Creating [repository].[Servers].[CreationDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of creation of the entry. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'CreationDate';


GO
PRINT N'Creating [repository].[Servers].[EditDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of editing the entry. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'EditDate';


GO
PRINT N'Creating [repository].[Servers].[DeleteDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date of deletion of the entry. ', @level0type = N'SCHEMA', @level0name = N'repository', @level1type = N'TABLE', @level1name = N'Servers', @level2type = N'COLUMN', @level2name = N'DeleteDate';


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
